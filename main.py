# 9.82 Дано предложение, в котором нет символа "-". Определить количество букв "о" в первом слове. Учесть,
# что в начале предложения могут быть пробелы.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# someString = str(input("Введите предложение\n"))  # Вводим предложение
# someString1 = someString.strip()  # Данный метод позволяет удалить пробелы в начале и конце предложения
# counter = someString1.count('о', 0, someString1.index(' '))  # count считаем кол-во "о" в промежутке от 0 до 1-го " "
# print(counter)  # Выводим количество
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 9.141(а) Дан текст, в котором имеются цифры. Найти их сумму.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# someString = str(input("Введите любой текст\n"))  # Вводим любой текст
# index = 0  # Создаем переменную для прохода по произвольному тексту
# summa = 0  # Создаём переменную для подсчёта суммы найденных чисел
# while index < len(someString):  # Проходимся по тексту
#     if someString[index].isdigit():  # Условие для проверки является ли числом символ
#         summa += int(someString[index])  # Суммируем при выполнении условия
#     index += 1
# print(summa)  # Выводим сумму найденных чисел
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 9.141(б) Дан текст, в котором имеются цифры. Найти максимальную цифру.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# someString = str(input("Введите любой текст\n"))  # Вводим любой текст
# index = 0  # Создаем переменную для прохода по произвольному тексту
# maximal = 0  # Создаём переменную для подсчёта суммы найденных чисел
# while index < len(someString):  # Проходимся по тексту
#     if someString[index].isdigit():  # Условие для проверки является ли числом символ
#         if int(someString[index]) > maximal:  # Условие для нахождения максимального числа
#             maximal = int(someString[index])  # Присваиваем если условие тру
#     index += 1
# print(maximal)  # Выводим максимальную цифру
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 9.161 Даны три слова. Напечатать только те буквы слов, которые есть лишь в одном из слов. Рассмотреть два варианта:
# Повторяющиеся буквы каждого слова рассматриваются
# Повторяющиеся буквы каждого слова не рассматриваются
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# someString1 = str(input('Введите первое слово\n'))  # Ввод первого слова
# someString2 = str(input('Введите второе слово\n'))  # Ввод второго слова
# someString3 = str(input('Введите третье слово\n'))  # Ввод третьего слова
# summaStrok = str(someString1 + someString2 + someString3)  # Складываем все строки
# resultat = ''  # Переменная для выборки уникальных букв в словах
# index1 = 0  # Создаем переменную для прохода по сумме строк
# while index1 < len(summaStrok):  # Проходим по сумме строк
#     if summaStrok.count(summaStrok[index1]) < 2:  # Условие для подсчёта повторяющихся букв
#         resultat += summaStrok[index1]  # Конкатенируем букву если по она не найдена в сумме строк
#     index1 += 1  # Переход к следующей итерации
# print(resultat)  # Выводим результат
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 9.166 Дано предложение. Поменять местами его первое и последнее слово.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# someString = str(input('Введите предложение\n'))
# someString1 = someString.strip().split(" ")
# index = 1
# resultat = ''
# resultat += someString1[-1]
# while index < len(someString1) - 1:
#     resultat += " "
#     resultat += someString1[index]
#     index += 1
# resultat += " "
# resultat += someString1[0]
# print(resultat)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 9.178 Дано предложение. Напечатать все его слова, предварительно преобразовав каждое из них по следующему правилу:
# заменить первую встречную букву "а" на "о".
# Удалить из слова все вхождения последней буквы (кроме неё самой)
# Оставить в слове только первые вхождения каждой буквы
# В самом длинном слове удалить среднюю (средние) буквы. Принять, что такое слово - единственное.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# someString = str(input("Введите предложение\n"))  # Ввод рандомного предложения
# index = 0  # Для прохода по словам
# index1 = 0  # Для прохода по словам
# index2 = 0  # Для прохода по словам
# index3 = 0  # Для прохода по словам
# someString1 = someString.replace('а', 'о', 1)  # Заменяем первую встречную букву 'а' на 'о'
# someString3 = ''
# maxSomeString = ''
# maxLength = 0
# print(someString1)  # Выводим
# someString2 = someString.strip().split(" ")  # Выполняем разделение предложения
# while index < len(someString2):  # Удалить из слова все вхождения последней буквы (кроме неё самой)
#     letter = someString2[index][-1]  # переменная для последней буквы
#     print(someString2[index][0:-1].replace(letter, '') + letter)  # удаляем из слова все вхождения последней буквы кроме
#     index += 1  # неё самой
# while index1 < len(someString2):  # Оставить в слове только первые вхождения каждой буквы
#     editSomeString = someString2[index1]
#     while index2 < len(editSomeString):
#         letter1 = editSomeString[index2]
#         someString3 += letter1
#         editSomeString[index2].replace(letter1, '')
#         index2 += 1
#     someString3 += " "
#     index2 = 0
#     index1 += 1
# print(someString3)
# while index3 < len(someString2):  #
#     if maxLength < len(someString2[index3]):
#       maxSomeString = someString2[index3]
#     index3 += 1
# letterMaxSomeString = int(len(maxSomeString) / 2)
# maxSomeString2 = maxSomeString[0:letterMaxSomeString] + maxSomeString[letterMaxSomeString + 1:]
# print(maxSomeString2)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
